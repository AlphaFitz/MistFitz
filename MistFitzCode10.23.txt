# EverythingMistFitzMicroPython
# input with handling, reading 
# good printout bottom

from machine import Pin
import machine
import utime

#Pins
led = Pin("LED", Pin.OUT)
pumpsw = machine.Pin(6,machine.Pin.OUT)
solsw = machine.Pin(7,machine.Pin.OUT)
solsw1 = machine.Pin(8,machine.Pin.OUT)
analog_value = machine.ADC(27)


#seconds with exception handling
#user input defined mist on
while True:
    user_seconds = input("Mist Sec On: ")
    if not user_seconds.isdigit():
        print("Please Use Whole Numerical Values:")
        continue
    user_seconds = int(user_seconds)
    if user_seconds >= 0 and user_seconds <= 60:
        break    
    print("Enter 0 to 60 Only Please")        
print("Mist On: ",user_seconds)
    
#minutes with exception handling
#user input defined mist off
while True:
    user_minutes = input("Mist Min Off: ")
    if not user_minutes.isdigit():
        print("Please Use Whole Numerical Values:")
        continue
    user_minutes = int(user_minutes)
    if user_minutes >= 0 and user_minutes <= 60:
        break    
    print("Enter 0 to 60 Only Please")
print("Mist Off: ",user_minutes)


#reading mpx in PSI loop 
while True:
    reading = round((analog_value.read_u16())/294,2)      
    utime.sleep(.25)
    if reading >=25:
        solsw.value(1)
        led(1)
        utime.sleep((user_seconds)) #math in parentheses
        led(0)
        solsw.value(0)
        utime.sleep((user_minutes) * 2) #math for solenoid off timing *60

    if reading <= 40 :
        pumpsw.value(0)
        solsw.value(0)
        led(1)
            
        

        
    else:
        pumpsw.value(0)
        solsw.value(0)
        led(0)
    
    print("PSI:",reading)
    print("Mist Sec On: ", user_seconds)
    print("Mist Min Off: ",user_minutes)
utime.sleep(.25)
